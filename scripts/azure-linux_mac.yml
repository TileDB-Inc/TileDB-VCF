steps:
- bash: |
    set -e pipefail
    brew install clang-format
    src=$BUILD_REPOSITORY_LOCALPATH
    cd $src
    $src/scripts/run-clang-format.sh $src clang-format 0 \
      $(find $src/src $src/test \
       -name "*.cc" -or -name "*.c" -or -name "*.h")
  condition: eq(variables['Agent.OS'], 'Darwin')
  displayName: 'Check formatting (macOS only)'

- bash: |
    set -e pipefail
    # Install bcftools (only required for running the CLI tests)
    if [[ "$AGENT_OS" == "Linux" ]]; then
        pushd /tmp
        wget https://github.com/samtools/bcftools/releases/download/1.9/bcftools-1.9.tar.bz2
        tar xfj bcftools-1.9.tar.bz2
        cd bcftools-1.9
        ./configure --prefix=/usr
        make -j2
        sudo make install
        popd
    else
        brew install bcftools
    fi

    # Install autoconf/automake (required for htslib)
    if [[ "$AGENT_OS" == "Linux" ]]; then
        sudo apt update && sudo apt install -y automake autoconf
    fi

    # Install some extra dependencies to speed up the core TileDB build
    if [[ "$AGENT_OS" == "Linux" ]]; then
        sudo apt install -y libssl-dev libbz2-dev liblz4-dev libtbb-dev libcurl4-openssl-dev zlib1g-dev
    fi
  displayName: 'Install dependencies'

- bash: |
    # DELETEME work-around for https://github.com/microsoft/azure-pipelines-image-generation/issues/969
    sudo chown root.root /

    # azure bash does not treat intermediate failure as error
    # https://github.com/Microsoft/azure-pipelines-yaml/issues/135
    set -e pipefail

    # Azure sets "SYSTEM=build" for unknown reasons, which breaks the OpenSSL configure script (in TileDB itself)
    #   - openssl configure uses ENV{SYSTEM} if available:
    #     https://github.com/openssl/openssl/blob/6d745d740d37d680ff696486218b650512bbbbc6/config#L56
    #   - error description:
    #     https://developercommunity.visualstudio.com/content/problem/602584/openssl-build-error-when-using-pipelines.htm
    unset SYSTEM

    # Configure and build TileDB-VCF
    mkdir -p $BUILD_REPOSITORY_LOCALPATH/build
    cd $BUILD_REPOSITORY_LOCALPATH/build
    cmake -DCMAKE_INSTALL_PREFIX=$BUILD_REPOSITORY_LOCALPATH/dist ..

    make -j4
    make -j4 -C libtiledbvcf tiledb_vcf_unit
    make check
    ../test/run-cli-tests.sh . ../test/inputs

    sudo make install-libtiledbvcf

  displayName: 'Build and test TileDB-VCF'

- bash: |
    set -e pipefail

    if [[ "$BUILD_PYTHON_API" == "ON" ]]; then
      if [[ "$AGENT_OS" == "Linux" ]]; then
        sudo apt-get install -y python3 python3-dev
      fi

      pushd $BUILD_REPOSITORY_LOCALPATH/python-api
      python -m pip install --upgrade pip
      python -m pip install numpy pandas
      python -m pip install -r requirements-dev.txt
      export LD_LIBRARY_PATH=$BUILD_REPOSITORY_LOCALPATH/dist/lib
      python setup.py install --user
      python setup.py pytest
    fi

  displayName: 'Build and test TileDB-VCF Python API'

- bash: |
      set -e pipefail
      # Display log files if the build failed
      echo "Dumping log files for failed build"
      echo "----------------------------------"
      for f in $(find $BUILD_REPOSITORY_LOCALPATH/build -name *.log);
        do echo "------"
           echo $f
           echo "======"
           cat $f
        done;
  condition: failed() # only run this job if the build step failed
  displayName: "Print log files (failed build only)"