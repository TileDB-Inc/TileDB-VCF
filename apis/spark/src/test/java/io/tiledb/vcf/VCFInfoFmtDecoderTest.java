package io.tiledb.vcf;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.Map;
import org.junit.Assert;
import org.junit.Test;

public class VCFInfoFmtDecoderTest extends SharedJavaSparkSession {
  @Test
  public void testFmtDecoding() {
    int[] bytes =
        new int[] {
          0x05, 0x00, 0x00, 0x00, 0x41, 0x44, 0x0, 0x1, 0x0, 0x0, 0x0, 0x2, 0x0, 0x0, 0x0, 0x1, 0x0,
          0x0, 0x0, 0x8, 0x0, 0x0, 0x0, 0x56, 0x41, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x0, 0x3,
          0x0, 0x0, 0x0, 0x9, 0x0, 0x0, 0x0, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x49, 0x4f, 0x4e, 0x0,
          0x53, 0x54, 0x52, 0x5f, 0x4d, 0x41, 0x58, 0x5f, 0x4c, 0x45, 0x4e, 0x0, 0x1, 0x0, 0x0, 0x0,
          0x1, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x0, 0x53, 0x54, 0x52, 0x5f, 0x50, 0x45, 0x52, 0x49,
          0x4f, 0x44, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x56, 0x41,
          0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x0, 0x3, 0x0, 0x0, 0x0, 0x10, 0x0,
          0x0, 0x0, 0x53, 0x54, 0x52, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
          0x6f, 0x6e, 0x0, 0x47, 0x4c, 0x0, 0x2, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x33, 0x33,
          0x41, 0xc2, 0x66, 0x66, 0x26, 0xc0, 0x0, 0x0, 0x0, 0x80
        };

    ByteBuffer buffer = ByteBuffer.allocate(bytes.length).order(ByteOrder.nativeOrder());
    buffer.position(0);
    for (int i : bytes) {
      buffer.put((byte) i);
    }

    Map<String, String> decoded = VCFInfoFmtDecoder.decodeInfoFmtBytes(buffer);

    Assert.assertEquals("1,8", decoded.get("AD"));
    Assert.assertEquals("17", decoded.get("STR_MAX_LEN"));
    Assert.assertEquals("1", decoded.get("STR_PERIOD"));
    Assert.assertEquals("STR-contraction", decoded.get("VAR_CONTEXT"));
    Assert.assertEquals("DELETION", decoded.get("VAR_TYPE"));
  }
}
