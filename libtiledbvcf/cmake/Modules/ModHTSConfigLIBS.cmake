
set(CONFIG_FILE_NAME "${CMAKE_ARGV3}")
#set(LIB_SEARCH_ROOT "${CMAKE_ARGV4}")
set(MSYS2_ENV_CMD "${CMAKE_ARGV4}")
message("MSYS2_ENV_CMD is ${MSYS2_ENV_CMD}, CMAKE_ARGV5 is ${CMAKE_ARGV5}")
message("CONFIG_FILE_NAME is ${CONFIG_FILE_NAME}")
file(READ ${CONFIG_FILE_NAME} CONFIG_FILE_CONTENTS)
#seems REGEX greedy, so limit filename chars to those expected...
string(REGEX MATCH "LIBS     = [-A-Za-z0-9_. ]*[\n]" CONFIG_LIBS_LINE ${CONFIG_FILE_CONTENTS})
message("CONFIG_LIBS_LINE is \"${CONFIG_LIBS_LINE}\"")
string(STRIP ${CONFIG_LIBS_LINE} CONFIG_LIBS_LINE_STRIPPED)
message("CONFIG_LIBS_LINE_STRIPPED is \"${CONFIG_LIBS_LINE_STRIPPED}\"")
string(REGEX REPLACE "LIBS     = " "" CONFIG_LIBS "${CONFIG_LIBS_LINE_STRIPPED}")
message("CONFIG_LIBS is ${CONFIG_LIBS}")
string(REPLACE " " ";" CONFIG_LIBS_LIST ${CONFIG_LIBS})
message("CONFIG_LIBS is ${CONFIG_LIBS}")
set(STATIC_LIB_LIST)
foreach(libspec IN LISTS CONFIG_LIBS_LIST)
  message("libspec is \"${libspec}\"")
  # hmm, should this be tied to start of string, do a regex?
  #string(REPLACE "-l" "" libbasename "${libspec}")
  string(REGEX REPLACE "^-l" "" libbasename "${libspec}")
  # try to address possible repeats, or static libs, where a path was present and no -l,
  # tho, the paths -might- be different than what we're subbing below, so that will be a loss
  # if happens...
  #get_filename_component(libbasename "${libspec}" NAME)
  get_filename_component(libbasename "${libbasename}" NAME)
  message("libbasename is \"${libbasename}\"")
  if(${libbasename} EQUAL "ws2_32")
    message("skipping static lib search for ${libbasename}")
    list(APPEND STATIC_LIB_LIST "${libspec}")
    continue()   
  endif()
  #~ message("hunting ${libbasename}.a")
  #~ find_path(libpath NAMES "lib${libbasename}.a"
    #~ PATHS "${LIB_SEARCH_ROOT}"
  #~ )
  #~ if(libpath)
    #~ message("found ${libpath}")
    #~ list(APPEND STATIC_LIB_LIST "${libpath}/lib${libbasename}.a")
  #~ else()
    #~ message(WARNING "did not find ${libbasename}.a, ${libpath}")
  #~ endif()
  string(SUBSTRING "${MSYS2_ENV_CMD}" 0 1 MSYS_DRV_LETTER)
  message("MSYS2_ENV_CMD is ${MSYS2_ENV_CMD}, MSYS_DRV_LETTER is ${MSYS_DRV_LETTER}")
  set(libpath2_FOUND FALSE)
  set(LIBPATH2_FOUND FALSE)
  set(libpath2)
  find_library(libpath2 NAMES lib${libbasename}.a
    PATHS ${MSYS_DRV_LETTER}:/msys64/mingw64/lib
    NO_CACHE
  )
  if(libpath2)
    message("found ${libpath2}")
    #list(APPEND STATIC_LIB_LIST "${libpath2}/lib${libbasename}.a")
    list(APPEND STATIC_LIB_LIST "${libpath2}")
  else()
    message(WARNING "did not find ${libbasename}.a, ${libpath2}")
    #assume we still need this item, not static lib found, at least where looking...
    list(APPEND STATIC_LIB_LIST "${libspec}")
  endif()
endforeach()
message("STATIC_LIB_LIST is ${STATIC_LIB_LIST}")
string(REPLACE ";" " " STATIC_LIBS "${STATIC_LIB_LIST}")
message("STATIC_LIBS is \"${STATIC_LIBS}\"")
string(REPLACE "LIBS     =" "LIBS     = ${STATIC_LIBS}\n#LIBS     =" NEW_CONFIG_FILE_CONTENTS "${CONFIG_FILE_CONTENTS}")
string(REGEX MATCH "LIBS     = [-:\\/A-Za-z0-9_. ]*[\n]" CONFIG_LIBS_LINE_NEW "${NEW_CONFIG_FILE_CONTENTS}")
message("CONFIG_LIBS_LINE_NEW is \"${CONFIG_LIBS_LINE_NEW}\"")
file(WRITE "${CONFIG_FILE_NAME}" "${NEW_CONFIG_FILE_CONTENTS}")
